plugins {
    id 'org.springframework.boot' version '3.3.4'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'java'
}

group = 'web3'
version = '1.0-SNAPSHOT'


java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-web-services'
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.1'
    implementation 'javax.xml.bind:jaxb-api:2.3.1'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.4'

    implementation 'wsdl4j:wsdl4j:1.6.3'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'

    implementation 'org.liquibase:liquibase-core'
    implementation 'com.zaxxer:HikariCP:5.1.0'

    implementation 'io.jsonwebtoken:jjwt:0.12.3'

    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.2'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.5'
    implementation 'org.glassfish.jaxb:jaxb-xjc:4.0.5'

//    jaxb 'org.glassfish.jaxb:jaxb-xjc'

    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
}

tasks.withType(Test) {
    useJUnitPlatform()
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// Define genJaxb task for XSD code generation
tasks.register('genJaxb', JavaExec) {
    group = 'JAXB'
    description = 'Generate Java classes from XSD using xjc'
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'com.sun.tools.xjc.XJCTask'
    args = [
            '-d', 'src/main/java', // Output directory for generated classes
            '-p', 'com.example.jaxb', // Package for generated classes
            'src/main/resources/xsd/point.xsd' // Adjust to your XSD file path
    ]
}